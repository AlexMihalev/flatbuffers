// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MyGame
{

using global::System;
using global::FlatBuffers;

public struct InParentNamespace : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static InParentNamespace GetRootAsInParentNamespace(ByteBuffer _bb) { return GetRootAsInParentNamespace(_bb, new InParentNamespace()); }
  public static InParentNamespace GetSizePrefixedRootAsInParentNamespace(ByteBuffer _bb) { return GetSizePrefixedRootAsInParentNamespace(_bb, new InParentNamespace()); }
  public static InParentNamespace GetRootAsInParentNamespace(ByteBuffer _bb, InParentNamespace obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static InParentNamespace GetSizePrefixedRootAsInParentNamespace(ByteBuffer _bb, InParentNamespace obj) { ByteBuffer __bb = _bb.Slice(); __bb.Position = FlatBufferConstants.SizePrefixLength; return GetRootAsInParentNamespace(__bb, obj); }
  public static int GetSizePrefix(ByteBuffer _bb) { return _bb.GetInt(_bb.Position); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public InParentNamespace __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartInParentNamespace(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<InParentNamespace> EndInParentNamespace(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<InParentNamespace>(o);
  }
};


}
